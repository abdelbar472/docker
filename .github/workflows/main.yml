name: Windows CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: windows-latest  # Running on Windows

    steps:
      # 1. Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Install OpenSSH Client for SSH deployment (if needed)
      - name: Install OpenSSH Client
        run: |
          Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0
        shell: powershell

      # 3. Test SSH Connectivity (adjust the port if using a non-standard SSH port)
      - name: Test SSH Connectivity
        run: |
          Test-NetConnection -ComputerName ${{ secrets.SERVER_HOST }} -Port 22
        shell: powershell

      # 4. Create SSH directory and add private key
      - name: Set Up SSH Key
        run: |
          $sshDir = "$env:USERPROFILE\.ssh"
          if (!(Test-Path -Path $sshDir)) {
            New-Item -ItemType Directory -Force -Path $sshDir
          }

          $keyFile = "$sshDir\id_rsa"
          # Ensure private key content is handled as multi-line properly
          @"
${{ secrets.SSH_PRIVATE_KEY }}
"@ | Out-File -FilePath $keyFile -Force -Encoding ascii
          
          # Set correct permissions for the private key
          icacls $keyFile /inheritance:r
          icacls $keyFile /grant "${env:USERNAME}:(R,W)"
        shell: powershell

      # 5. Deploy to Server via SSH using PowerShell
      - name: Deploy to Server
        run: |
          $sshDir = "$env:USERPROFILE\.ssh"
          $keyFile = "$sshDir\id_rsa"
          ssh -i $keyFile -o StrictHostKeyChecking=no "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}" `
          "cd ${{ secrets.REMOTE_PATH }} && git pull origin main"
        shell: powershell
